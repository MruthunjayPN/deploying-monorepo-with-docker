##build docker image
##push it to dockerhub
##ssh into vm and restart new image

name: Continuous Deployment (Prod) (Backend)
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.backend
          push: true
          tags:  muttu1511/todo-app-backend:${{ github.sha }}
  
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # sudo apt update
            # sudo apt install docker.io docker-compose -y
            # sudo systemctl start docker
            # sudo systemctl enable docker
            # sudo usermod -aG docker ubuntu
            # newgrp docker 
            # no need of above commands , bcz we know docker is installed in VM
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            # Clean up old container if exists
            sudo docker rm -f backend-app || true

            # Free up port 8080 if something else is using it (OPTIONAL STEP: safer way)
            sudo fuser -k 8080/tcp || true

            sudo docker run -d --name backend-app -p 8080:8080 muttu1511/todo-app-backend:${{ github.sha }}